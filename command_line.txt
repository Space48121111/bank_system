Automating processes

>> python3 -m venv .venv
>> source .venv/bin/activate

# re-install pip --site-packages
>> python -m ensurepip --default-pip
# upgrade pip
>> /Users/Stella/project_x/perseverance_bank_system/.venv/bin/python -m pip install --upgrade pip

>> python -m pip install Django

python -m django --version

>>
django-admin startproject testMigri
# auto create folders
>> cd clinicClients
>>
python manage.py startapp test
# settings INSTALLED_APPS, AppnameConfig
# templates # databases, TIME_ZONE

#postgres
>> if [my_service], put . files into home directory ~/

>
    'web',
    'dentist.apps.DentistConfig',
    'DIRS': [BASE_DIR / 'templates'],

# html: {% load static %}
# legacy database
python manage.py inspectdb

# model, views, forms/django default class views,
template, static, urls * (2+),
> replace keywords
>>
cd dentist echo "form" -> forms.py mkdir templates mkdir static  echo "url" -> urls.py
> replace keyword

>>
cd templates mkdir dentist cd dentist
echo "html" -> home.html create.html index.html
>> cd ../static mkdir dentist cd dentist echo "css" -> style.css

>>
python manage.py makemigrations
python manage.py migrate

# test
>>
./manage.py test
>>
./manage.py test dentist.tests.ClientListModelTests.test_appt_recently_with_future_appt

>> --pattern="tests_*.py"
>> --keepdb
# to print all elements
>> pytest -s

>>
python manage.py runserver >> username >> email >> password

pip install psycopg2-binary

#css
pip3 install django-bootstrap3
pip install django_forms_bootstrap

# timezone
pip install django-timezone-field

# heroku
>> touch Procfile # web: gunicorn electric_motor.wsgi
>> pip install gunicorn/django_heroku/python-decouple/
>> pip freeze requirements.txt
settings -> import django_heroku/dj_database_url
        -> from decouple import config
        -> middleware/static files -> 'whitenoise.middleware.WhiteNoiseMiddleware'
        ->
        STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
        -> django_heroku.settings(locals())
# heroku toolbelt CLI


>> brew tap heroku/brew && brew install heroku

>> heroku login
>> git init
>>
curl -u 'stella-vir' https://api.github.com/user/repos -d '{"name":"electric-motor-s"}'
>> git checkout main/temp
>> heroku git:remote -a electric-motor-s
#
git remote add origin https://github.com/stella-vir/electric-motor-s.git
git remote add heroku https://github.com/stella-vir/electric-motor-s.git
>> git remote

>> git branch -M main
>> git push -u origin main

>> git push heroku main
# heroku buildpacks:set heroku/python
>> heroku create electric-motor-s --buildpack heroku/python

>> heroku config:set DISABLE_COLLECTSTATIC=1 -a electric-motor-s
>> heroku keys:add
>> heroku rename electric-motor-s

# git version control
>> git config --global user.name "stella-vir"
>> git config --global user.email "stellavir11@gmail.com"
>> git config --global push.default matching
>> git config --global alias.co checkout
>> git init
>> mkdir ~/.ssh cd ~/.ssh ssh-keygen -t rsa

# end
